<Window
    x:Class="WpfNotepad.Views.SaveWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="window"
    Title="记事本"
    Width="355"
    Height="136"
    DataContext="{Binding Source={StaticResource Locator}, Path=SaveViewModel}"
    ResizeMode="NoResize"
    ShowInTaskbar="False"
    Topmost="True"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="White" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="White" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="Red" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="Red" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="Red" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="Red" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Border BorderBrush="Black" BorderThickness="1">
        <DockPanel>
            <DockPanel AllowDrop="True" DockPanel.Dock="Top">
                <DockPanel.InputBindings>
                    <MouseBinding
                        Command="{Binding DragWinCommand}"
                        CommandParameter="{Binding ElementName=window}"
                        MouseAction="LeftClick" />
                </DockPanel.InputBindings>
                <Button
                    Width="33"
                    Height="33"
                    Background="White"
                    Command="{Binding CancelCommand}"
                    CommandParameter="{Binding ElementName=window}"
                    Content="×"
                    DockPanel.Dock="Right"
                    FontSize="24"
                    Style="{DynamicResource ButtonStyle1}" />
                <TextBlock
                    Margin="5"
                    VerticalAlignment="Center"
                    Text="记事本" />
            </DockPanel>
            <StatusBar DockPanel.Dock="Bottom">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBarItem Grid.Column="1">
                    <Button
                        Width="70"
                        Height="25"
                        Margin="2,7"
                        Padding="5,3"
                        Command="{Binding SaveCommand, Mode=OneWay}"
                        CommandParameter="{Binding ElementName=window}"
                        Content="保存(_S)"
                        IsDefault="True" />
                </StatusBarItem>
                <StatusBarItem Grid.Column="2">
                    <Button
                        Width="90"
                        Height="25"
                        Margin="2,6"
                        Padding="5,3"
                        Command="{Binding NotSaveCommand, Mode=OneWay}"
                        CommandParameter="{Binding ElementName=window}"
                        Content="不保存(_N)"
                        IsDefault="True" />
                </StatusBarItem>
                <StatusBarItem Grid.Column="3">
                    <Button
                        Width="70"
                        Height="25"
                        Margin="2,4,5,4"
                        Padding="5,3"
                        Command="{Binding CancelCommand}"
                        CommandParameter="{Binding ElementName=window}"
                        Content="取消"
                        IsCancel="True" />
                </StatusBarItem>
            </StatusBar>
            <TextBlock
                Margin="10"
                VerticalAlignment="Center"
                FontSize="16"
                Foreground="#FF096ED3">
                <Run Text="你想将更改保存到 " />
                <Run Text="{Binding DocumentModel.FileName}" />
                <Run Text=" 吗?" />
            </TextBlock>
        </DockPanel>
    </Border>
</Window>
