<Window
    x:Class="WpfNotepad.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:WpfNotepad.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:WpfNotepad.Helpers"
    xmlns:interactivity="clr-namespace:WpfNotepad.Interactivity"
    xmlns:local="clr-namespace:WpfNotepad"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodels="clr-namespace:WpfNotepad.ViewModels"
    Title="无标题 - 记事本"
    Width="384"
    Height="652"
    DataContext="{Binding Source={StaticResource Locator}}"
    Icon="WpfNotepad.ico"
    ResizeMode="CanResizeWithGrip"
    mc:Ignorable="d">
    <interactivity:Interaction.Triggers>
        <interactivity:EventTrigger EventName="Loaded">
            <interactivity:InvokeCommandAction Command="{Binding SetDocumentModelTextBoxCommand}" CommandParameter="{Binding ElementName=textBox}" />
        </interactivity:EventTrigger>
    </interactivity:Interaction.Triggers>
    <!--<Window.DataContext>
        <viewmodels:MainViewModel />
    </Window.DataContext>-->
    <Window.InputBindings>
        <MouseBinding Command="{Binding ViewViewModel.ZoomInCommand}" Gesture="{x:Static helpers:MouseWheelGesture.CtrlUp}" />
        <MouseBinding Command="{Binding ViewViewModel.ZoomOutCommand}" Gesture="{x:Static helpers:MouseWheelGesture.CtrlDown}" />
        <!--  File Menu  -->
        <KeyBinding
            Key="N"
            Command="{Binding FileViewModel.NewCommand}"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="N"
            Command="{Binding FileViewModel.NewWindowCommand}"
            Modifiers="Ctrl+Shift" />
        <KeyBinding
            Key="O"
            Command="{Binding FileViewModel.OpenCommand}"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="S"
            Command="{Binding FileViewModel.SaveCommand}"
            Modifiers="Ctrl" />
        <KeyBinding Command="{Binding FileViewModel.SaveAsCommand}" Gesture="Ctrl+Shift+S" />
        <KeyBinding
            Key="P"
            Command="{Binding FileViewModel.PrintCommand}"
            Modifiers="Ctrl" />
        <!--  Edit Menu  -->
        <KeyBinding
            Key="E"
            Command="{Binding EditViewModel.BingCommand}"
            CommandParameter="{Binding ElementName=textBox}"
            Modifiers="Ctrl" />
        <KeyBinding Key="F3" Command="{Binding EditViewModel.FindDownCommand}" />
        <KeyBinding
            Key="F3"
            Command="{Binding EditViewModel.FindUpCommand}"
            Modifiers="Shift" />
        <KeyBinding
            Key="G"
            Command="{Binding EditViewModel.GotoCommand}"
            Modifiers="Ctrl" />
        <KeyBinding Key="F5" Command="{Binding EditViewModel.TimeDateCommand}" />
        <!--  View Menu  -->
        <KeyBinding
            Key="OemPlus"
            Command="{Binding ViewViewModel.ZoomInCommand}"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="OemMinus"
            Command="{Binding ViewViewModel.ZoomOutCommand}"
            Modifiers="Ctrl" />
        <KeyBinding Command="{Binding ViewViewModel.ZoomDefaultCommand}" Gesture="Ctrl+0" />
    </Window.InputBindings>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:FontSizePercentMultiConverter x:Key="FontSizePercentMultiConverter" />
        <converters:BooleanTextWrappingConverter x:Key="BooleanTextWrappingConverter" />
        <converters:BooleanScrollBarVisibilityConverter x:Key="BooleanScrollBarVisibilityConverter" />

        <ControlTemplate x:Key="MenuItemControlTemplate1" TargetType="{x:Type MenuItem}">
            <Border
                x:Name="templateRoot"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition
                            Width="Auto"
                            MinWidth="22"
                            SharedSizeGroup="MenuItemIconColumnGroup" />
                        <ColumnDefinition Width="13" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter
                        x:Name="Icon"
                        Width="16"
                        Height="16"
                        Margin="3"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Content="{TemplateBinding Icon}"
                        ContentSource="Icon"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <Border
                        x:Name="GlyphPanel"
                        Width="22"
                        Height="22"
                        Margin="-1,0,0,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Background="#3D26A0DA"
                        BorderBrush="#FF26A0DA"
                        BorderThickness="1"
                        ClipToBounds="False"
                        Visibility="Hidden">
                        <Path
                            x:Name="Glyph"
                            Width="10"
                            Height="11"
                            Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                            Fill="#FF212121"
                            FlowDirection="LeftToRight" />
                    </Border>
                    <ContentPresenter
                        x:Name="menuHeaderContainer"
                        Grid.Column="2"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Content="{TemplateBinding Header}"
                        ContentSource="Header"
                        ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        RecognizesAccessKey="True"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <TextBlock
                        x:Name="menuGestureText"
                        Grid.Column="4"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Text="{TemplateBinding InputGestureText}" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter TargetName="templateRoot" Property="Background" Value="#3D26A0DA" />
                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="#FF26A0DA" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="#FF707070" />
                    <Setter TargetName="Glyph" Property="Fill" Value="#FF707070" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" Value="True" />
                        <Condition Property="IsEnabled" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="templateRoot" Property="Background" Value="#0A000000" />
                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="#21000000" />
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <DockPanel FocusManager.FocusedElement="{Binding ElementName=textBox}">
        <Menu Background="White" DockPanel.Dock="Top">
            <MenuItem DataContext="{Binding FileViewModel}" Header="文件(_F)">
                <MenuItem
                    Command="{Binding NewCommand}"
                    Header="新建(_N)"
                    InputGestureText="Ctrl+N"
                    Template="{StaticResource MenuItemControlTemplate1}" />
                <MenuItem
                    Command="{Binding NewWindowCommand}"
                    Header="新窗口(_W)"
                    InputGestureText="Ctrl+Shift+N"
                    Template="{StaticResource MenuItemControlTemplate1}" />
                <MenuItem
                    Command="{Binding OpenCommand}"
                    Header="打开(_O)..."
                    InputGestureText="Ctrl+O"
                    Template="{StaticResource MenuItemControlTemplate1}" />
                <MenuItem
                    Command="{Binding SaveCommand}"
                    Header="保存(_S)"
                    InputGestureText="Ctrl+S"
                    Template="{StaticResource MenuItemControlTemplate1}" />
                <MenuItem
                    Command="{Binding SaveAsCommand}"
                    Header="另存为(_A)..."
                    InputGestureText="Ctrl+Shift+S"
                    Template="{StaticResource MenuItemControlTemplate1}" />
                <Separator />
                <MenuItem Command="{Binding PageSettingCommand}" Header="页面设置(_U)..." />
                <MenuItem
                    Command="{Binding PrintCommand}"
                    Header="打印(_P)..."
                    InputGestureText="Ctrl+P"
                    Template="{StaticResource MenuItemControlTemplate1}" />
                <Separator />
                <MenuItem Command="{Binding ExitCommand}" Header="退出(_X)" />
            </MenuItem>
            <MenuItem DataContext="{Binding EditViewModel}" Header="编辑(_E)">
                <MenuItem
                    Command="Undo"
                    Header="撤销(_U)"
                    Template="{StaticResource MenuItemControlTemplate1}" />
                <Separator />
                <MenuItem
                    Command="Cut"
                    Header="剪切(_T)"
                    Template="{StaticResource MenuItemControlTemplate1}" />
                <MenuItem
                    Command="Copy"
                    Header="复制(_C)"
                    Template="{StaticResource MenuItemControlTemplate1}" />
                <MenuItem
                    Command="Paste"
                    Header="粘贴(_P)"
                    Template="{StaticResource MenuItemControlTemplate1}" />
                <MenuItem
                    Command="EditingCommands.Delete"
                    Header="删除(_L)"
                    InputGestureText="Del"
                    Template="{StaticResource MenuItemControlTemplate1}" />
                <Separator />
                <MenuItem
                    Command="{Binding BingCommand}"
                    CommandParameter="{Binding ElementName=textBox}"
                    Header="使用 Bing 搜索..."
                    InputGestureText="Ctrl+E"
                    Template="{StaticResource MenuItemControlTemplate1}" />
                <MenuItem
                    Command="Find"
                    Header="查找(_F)..."
                    Template="{StaticResource MenuItemControlTemplate1}" />
                <MenuItem
                    Command="{Binding FindDownCommand}"
                    Header="查找下一个(_N)"
                    InputGestureText="F3"
                    Template="{StaticResource MenuItemControlTemplate1}" />
                <MenuItem
                    Command="{Binding FindUpCommand}"
                    Header="查找上一个(_V)"
                    InputGestureText="Shift+F3"
                    Template="{StaticResource MenuItemControlTemplate1}" />
                <MenuItem
                    Command="Replace"
                    Header="替换(_R)..."
                    Template="{StaticResource MenuItemControlTemplate1}" />
                <MenuItem
                    Command="{Binding GotoCommand}"
                    Header="转到(_A)"
                    InputGestureText="Ctrl+G"
                    Template="{StaticResource MenuItemControlTemplate1}" />
                <Separator />
                <MenuItem Command="SelectAll" Template="{StaticResource MenuItemControlTemplate1}" />
                <MenuItem
                    Command="{Binding TimeDateCommand}"
                    Header="时间/日期(_D)"
                    InputGestureText="F5"
                    Template="{StaticResource MenuItemControlTemplate1}" />
            </MenuItem>
            <MenuItem DataContext="{Binding FormatViewModel}" Header="格式(_O)">
                <MenuItem
                    Header="自动换行(_W)"
                    IsCheckable="True"
                    IsChecked="{Binding DocumentModel.IsWrapped, Mode=TwoWay}" />
                <MenuItem Command="{Binding FontCommand}" Header="字体(_F)..." />
            </MenuItem>
            <MenuItem DataContext="{Binding ViewViewModel}" Header="查看(_V)">
                <MenuItem Header="缩放(_Z)">
                    <MenuItem
                        Command="{Binding ZoomInCommand}"
                        Header="放大(_I)"
                        InputGestureText="Ctrl+加号"
                        Template="{StaticResource MenuItemControlTemplate1}" />
                    <MenuItem
                        Command="{Binding ZoomOutCommand}"
                        Header="缩小(_O)"
                        InputGestureText="Ctrl+减号"
                        Template="{StaticResource MenuItemControlTemplate1}" />
                    <MenuItem
                        Command="{Binding ZoomDefaultCommand}"
                        Header="恢复默认缩放"
                        InputGestureText="Ctrl+0"
                        Template="{StaticResource MenuItemControlTemplate1}" />
                </MenuItem>
                <MenuItem
                    Header="状态栏(_S)"
                    IsCheckable="True"
                    IsChecked="{Binding DocumentModel.IsStatusBarShow, Mode=TwoWay}" />
            </MenuItem>
            <MenuItem DataContext="{Binding HelpViewModel}" Header="帮助(_H)">
                <MenuItem Command="{Binding HelpCommand}" Header="查看帮助(_H)" />
                <MenuItem Command="{Binding FeedBackCommand}" Header="发送反馈(_F)" />
                <MenuItem Command="{Binding AboutCommand}" Header="关于记事本(_A)" />
            </MenuItem>
        </Menu>
        <StatusBar DockPanel.Dock="Bottom" Visibility="{Binding DocumentModel.IsStatusBarShow, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="140" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="120" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="105" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <Separator Grid.Column="1" />
            <StatusBarItem Grid.Column="2">
                <TextBlock Margin="3,0" Text="第1行，第1列" />
            </StatusBarItem>
            <Separator Grid.Column="3" />
            <StatusBarItem Grid.Column="4">
                <TextBlock Margin="3,0">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource FontSizePercentMultiConverter}">
                            <Binding Path="DocumentModel.FontSize" />
                            <Binding Path="DocumentModel.FontSizeDefault" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </StatusBarItem>
            <Separator Grid.Column="5" />
            <StatusBarItem Grid.Column="6">
                <TextBlock Margin="3,0" Text="Windows(CRLR)" />
            </StatusBarItem>
            <Separator Grid.Column="7" />
            <StatusBarItem Grid.Column="8">
                <TextBlock Margin="3,0" Text="UTF-8" />
            </StatusBarItem>
        </StatusBar>
        <TextBox
            x:Name="textBox"
            AcceptsReturn="True"
            AcceptsTab="True"
            FontFamily="{Binding DocumentModel.FontFamily}"
            FontSize="{Binding DocumentModel.FontSize}"
            FontStyle="{Binding DocumentModel.FontStyle}"
            FontWeight="{Binding DocumentModel.FontWeight}"
            HorizontalScrollBarVisibility="{Binding DocumentModel.IsWrapped, Converter={StaticResource BooleanScrollBarVisibilityConverter}}"
            IsInactiveSelectionHighlightEnabled="True"
            SelectionBrush="{StaticResource {x:Static SystemColors.HighlightBrushKey}}"
            Text="{Binding DocumentModel.Text, UpdateSourceTrigger=PropertyChanged}"
            TextWrapping="{Binding DocumentModel.IsWrapped, Converter={StaticResource BooleanTextWrappingConverter}}"
            VerticalScrollBarVisibility="Visible" />
    </DockPanel>
</Window>
